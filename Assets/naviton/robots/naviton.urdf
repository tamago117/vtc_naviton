<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from naviton.urdf.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="naviton">
  <!-- =============== Link & Joint =============== -->
  <!-- Base -->
  <link name="base_foot_point"/>
  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 0.0"/>
    <parent link="base_foot_point"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <!--- <mesh filename="package://kcctsim/meshes/DAE/base/base_link.dae"/>-->
        <mesh filename="package://kcctsim/meshes/STL/base/body.stl"/>
      </geometry>
      <material name="gray">
        <color rgba="0.8 0.8 0.8 2.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://kcctsim/meshes/STL/base/body.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="-0.061 0 -0.002"/>
      <mass value="45"/>
      <inertia ixx="1.64890" ixy="0" ixz="-0.21424" iyy="2.24766" iyz="0" izz="1.25664"/>
    </inertial>
  </link>
  <joint name="right_wheel_joint" type="continuous">
    <origin xyz="0 -0.2775 0.1575"/>
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_wheel_link">
    <visual>
      <geometry>
        <!--<mesh filename="package://kcctsim/meshes/DAE/wheel/wheel_link.dae"/>-->
        <mesh filename="package://kcctsim/meshes/STL/wheel/wheel.stl"/>
      </geometry>
      <material name="black">
        <color rgba="0.2 0.2 0.2 2.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="-1.57079637 0 0" xyz="0 -0.003 0"/>
      <geometry>
        <cylinder length="0.032" radius="0.1575"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.57079637 0 0" xyz="0 -0.003 0"/>
      <mass value="2.0"/>
      <inertia ixx="0.0125737916667" ixy="0" ixz="0" iyy="0.0125737916667" iyz="0" izz="0.02480625"/>
    </inertial>
  </link>
  <joint name="left_wheel_joint" type="continuous">
    <origin rpy="0 0 3.14159274" xyz="0 0.2775 0.1575"/>
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <axis xyz="0 -1 0"/>
  </joint>
  <link name="left_wheel_link">
    <visual>
      <geometry>
        <!--<mesh filename="package://kcctsim/meshes/DAE/wheel/wheel_link.dae"/>-->
        <mesh filename="package://kcctsim/meshes/STL/wheel/wheel.stl"/>
      </geometry>
      <material name="black">
        <color rgba="0.2 0.2 0.2 2.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="-1.57079637 0 0" xyz="0 -0.003 0"/>
      <geometry>
        <cylinder length="0.032" radius="0.1575"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.57079637 0 0" xyz="0 -0.003 0"/>
      <mass value="2.0"/>
      <inertia ixx="0.0125737916667" ixy="0" ixz="0" iyy="0.0125737916667" iyz="0" izz="0.02480625"/>
    </inertial>
  </link>
  <!-- Sensors -->
  <!-- GPS -->
  <!--- <xacro:gps_v0 parent="base_link">
	<origin xyz="-0.06229 0 0.420552" rpy="0 0 -${M_PI}"/>
  </xacro:gps_v0>-->
  <!-- Gim30 -->
  <!--<xacro:gim30_v0 parent="base_link">
  	<origin xyz="0.07395931 0 0.24578237"/>
  </xacro:gim30_v0>-->
  <joint name="front_lrf_joint" type="fixed">
    <origin xyz="0.225 -0.245 0.195"/>
    <parent link="base_link"/>
    <child link="front_lrf_link"/>
  </joint>
  <link name="front_lrf_link">
    <visual>
      <geometry>
        <mesh filename="package://kcctsim/meshes/STL/sensors/utm30lx.stl"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://kcctsim/meshes/STL/sensors/utm30lx.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 -0.0164"/>
      <mass value="0.4"/>
      <inertia ixx="0.000376666666667" ixy="0" ixz="0" iyy="0.000376666666667" iyz="0" izz="0.000326666666667"/>
    </inertial>
  </link>
  <joint name="rear_lrf_joint" type="fixed">
    <origin rpy="0 0 -3.14159274" xyz="-0.485 0.245 0.195"/>
    <parent link="base_link"/>
    <child link="rear_lrf_link"/>
  </joint>
  <link name="rear_lrf_link">
    <visual>
      <geometry>
        <mesh filename="package://kcctsim/meshes/STL/sensors/utm30lx.stl"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://kcctsim/meshes/STL/sensors/utm30lx.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 -0.0164"/>
      <mass value="0.4"/>
      <inertia ixx="0.000376666666667" ixy="0" ixz="0" iyy="0.000376666666667" iyz="0" izz="0.000326666666667"/>
    </inertial>
  </link>
  <link name="camera_link"/>
  <joint name="lrf_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0 0 0.195"/>
  </joint>
  <!--
  <link name="imu_link"/>
  <joint name="imu_link_joint" type="fixed">
	<parent link="base_link"/>
	<child link="imu_link"/>
	<origin xyz="0 0 0.051" rpy="0 0 0" />
  </joint>-->
  <transmission name="right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_wheel_motor">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>30</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_wheel_motor">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>30</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- =============== Gazebo =============== -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <!-- <robotNamespace>fourth_robot</robotNamespace> -->
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <selfCollide>false</selfCollide>
    <mu1 value="0.05"/>
    <mu2 value="0.05"/>
  </gazebo>
  <gazebo reference="right_wheel_link">
    <selfCollide>false</selfCollide>
    <mu1 value="0.8"/>
    <mu2 value="0.8"/>
  </gazebo>
  <gazebo reference="left_wheel_link">
    <selfCollide>false</selfCollide>
    <mu1 value="0.8"/>
    <mu2 value="0.8"/>
  </gazebo>
  <!-- <xacro:wheel_gazebo_control_v0 rate="25"/> -->
  <gazebo reference="front_lrf_link">
    <sensor name="front_lrf_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.65806278939</min_angle>
            <max_angle>1.65806278939</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>60.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_front_lrf_controller">
        <topicName>scan1</topicName>
        <frameName>front_lrf_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="rear_lrf_link">
    <sensor name="rear_lrf_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619449019</min_angle>
            <max_angle>2.35619449019</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>60.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_rear_lrf_controller">
        <topicName>scan2</topicName>
        <frameName>rear_lrf_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
</robot>

